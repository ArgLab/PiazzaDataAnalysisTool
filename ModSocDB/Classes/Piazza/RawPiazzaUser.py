# This file is covered by the LICENSE file in the root of this project.
# @license <https://github.com/ArgLab/PiazzaDataAnalysisTool/blob/master/LICENSE>
#!/usr/bin/env python
"""
RawPiazzaUser.py
:Author: Collin Lynch
:Date: 09/29/2014

This class represents the raw Piazza User data as loaded from
the database dumps.  
"""



# -------------------------------------------
# imports.
# ===========================================
from ming import schema
from ming.odm import FieldProperty, ForeignIdProperty, RelationProperty
from ming.odm.declarative import MappedClass

# Load the shared session objects and library classes.
# -----------------------------------------------------
from ... import ModSocDB
import ModSocDB.ModSocDB
import PiazzaUser

# ===========================================
class RawPiazzaUser(MappedClass):
    """
    The RawPiazzaUser class represents a wrapper for the user names as
    pulled from the Piazza data.  It wraps up the existing field and
    should be used as a hook for user searching and for linking to
    content generated by the users.
  
    Collection:

    Relations:

    Fields:
    
  
    """

    # ---------------------------------------------
    # Mongometa information.
    # =============================================
    class __mongometa__:
        session = ModSocDB.ModSocDB.Session
        name = "raw_piazza_users"


    # ---------------------------------------------
    # Fields. 
    # =============================================

    # Mongodb object ID (unique).
    _id     = FieldProperty(schema.ObjectId)

    # Piazza unique user ID.  
    user_id = FieldProperty(str)
    other = FieldProperty(str)
    
    # Count of answers given to questions.
    answers = FieldProperty(int)

    # Count of posts made.
    posts   = FieldProperty(int)

    # Count of views made.  
    views   = FieldProperty(int)

    # Count of asks made.  
    asks    = FieldProperty(int)

    # Student real name or anonymized name.
    name    = FieldProperty(str)

    # Days active or logged in?
    days    = FieldProperty(int)

    # Array purpose undefined, contains a list of strings.
    lti_ids = FieldProperty([str])

    # User's email address (is in standard form so can be split.)
    email   = FieldProperty(str)


    # ---------------------------------------------
    # Link Information
    # =============================================

    # Relationship with the related users.
    User = RelationProperty("PiazzaUser")


    # ======================================================================
    # Migration Function.
    #
    # These methods are used for the migration of the content to the
    # general user content class defined in PiazzaUser.py
    # ======================================================================

    @staticmethod
    def migrateRawContent():
        """
        This is a static method that will extract and iterate over
        the raw user content to generate the split users which will
        later be anonymized.  
        """
        RawUserList = RawPiazzaUser.query.find()
        Results = [U.makeUser() for U in RawUserList]
        ModSocDB.Session.flush()
        return Results

    def makeUser(self):
        """
        Make a PiazzaUser instance that copies this user and
        then link it back to this RawUser so that it can be
        used for generation of the split content.
        """
        U = PiazzaUser.PiazzaUser()
